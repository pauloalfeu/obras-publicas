import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from wordcloud import WordCloud
from collections import Counter
import re

st.markdown("### üèóÔ∏è AN√ÅLISE DO ANDAMENTO DE OBRAS P√öBLICAS UTILIZANDO DADOS DE PORTAIS DE TRANSPAR√äNCIA")

################################### SE√á√ÉO DE GUIAS

tab1, tab2, tab3 = st.tabs(["Obra P√∫blica", "Lei de Acesso √† Informa√ß√£o", "Portal da Transpar√™ncia de Cascavel "])

with tab1:
    st.markdown("#### Obra P√∫blica: Conceito e Caracter√≠sticas")
    #st.image("https://egob.com/wp-content/uploads/2021/01/egob_obra_publica-1024x671.png", width=350)
    st.markdown("De acordo com o Conselho Nacional do Minist√©rio P√∫blico, obra p√∫blica √© considerada ‚Äútoda constru√ß√£o, reforma, fabrica√ß√£o, recupera√ß√£o ou amplia√ß√£o de bem p√∫blico‚Äù (CNMP, 2017).")
    st.markdown("Ressalte-se que a qualidade de uma obra depende do adequado gerenciamento de suas diversas etapas intermedi√°rias e da participa√ß√£o de profissionais capacitados (CNMP, 2017).")
with tab2:
    st.markdown("#### Lei de Acesso √† Informa√ß√£o")
    st.image("https://goias.gov.br/educacao/wp-content/uploads/sites/40/2024/03/lei.png", width=400)
    st.markdown(" A Lei de Acesso √† Informa√ß√£o N¬∫ 12.527, foi sancionada em 18 de novembro de 2011. Esta tem como diretriz o princ√≠pio de publicidade m√°xima da administra√ß√£o p√∫blica. ")
    st.markdown("O artigo 3¬∫ da lei prev√™ a utiliza√ß√£o de ferramentas de comunica√ß√£o viabilizadas pela tecnologia da informa√ß√£o. Uma das principais manifesta√ß√µes da utiliza√ß√£o da T.I. na publicidade dos dados p√∫blicos est√° no chamados Portais da Transpar√™ncia.")
    st.markdown("")
    st.markdown("##### Defini√ß√£o de Portal da Transpar√™ncia:")
    st.markdown("\"√© um site de acesso livre, no qual o cidad√£o pode encontrar informa√ß√µes sobre como o dinheiro p√∫blico √© utilizado, al√©m de se informar sobre assuntos relacionados √† gest√£o p√∫blica\" (Controladoria Geral da Uni√£o).")
    st.markdown("Dados geralmente disponibilizadas nos portais est√£o relacionados as √°reas de: Licita√ß√µes, Contratos, Compras, Recursos Humanos, Despesas, Receitas, Tributos, etc.")
with tab3:
    st.markdown("#### Portal da Transpar√™ncia de Cascavel ")
    st.markdown("Tutorial: Acessando e Obtendo Dados em Formato .CSV no Portal da Transpar√™ncia de Cascavel")
    st.markdown("Este tutorial tem como objetivo ajudar voc√™ a navegar pelo Portal da Transpar√™ncia do Munic√≠pio de Cascavel e obter os dados de seu interesse em formato .CSV. Esse formato √© ideal para an√°lise na ferramenta que vamos utilizar, permitindo que voc√™ explore os dados de forma mais detalhada.")
    st.markdown("")
    st.markdown("##### Passo a Passo:")
    st.markdown("##### 1. **Acesse o Portal:**")
    st.markdown("* Abra seu navegador de internet (Google Chrome, Mozilla Firefox, etc.) e digite a seguinte URL na barra de endere√ßo: https://cascavel.atende.net/transparencia/")
    st.markdown("##### 2. **Navegue pelo Site:**")
    st.markdown("* Explore as diferentes se√ß√µes do portal. Geralmente, voc√™ encontrar√° menus ou categorias que dividem os dados por temas, encontre a se√ß√£o destinada a \"OBRAS PUBLICAS\".")
    st.markdown("##### 3. **Consultar obras p√∫blicas:**")
    st.markdown("* Voc√™ ser√° redirecionado para uma p√°gina dedicada e ir√° clicar no campo onde consta: \"CONSULTAR OBRAS PUBLICAS\".")
    st.markdown("* Feito isto, voc√™ ir√° clicar no bot√£o: \"PORTAL DA TRANSPAR√äNCIA MUNICIPAL\".")
    st.markdown("##### 4. **Aplique ou remova filtros antes do download:**")
    st.markdown("* A nova guia que ser√° aberta apresentar√° uma ferramenta de pesquisa das obras, e antes de baixar a base de dados, recomendamos que remova o filtro de \"ANO\" clicando no ano que aparecer√° automaticamente e selecionando a op√ß√£o \"S...\".")
    st.markdown("##### 5. **Baixando a base de dados:**")
    st.markdown("* Feita a etapa de remo√ß√£o ou sele√ß√£o de filtros voc√™ estar√° pronto para salvar a base de dados em seu dispositivo, basta clicar na op√ß√£o \"DADOS ABERTOS\", e depois, clicando em \"CONFIRMAR\".")

################################### SE√á√ÉO DE UPLOAD DE DATAFRAME
st.divider()
st.markdown("##### Carregue um arquivo _.csv_ clicando em \"Browse files\" no campo abaixo:")
st.markdown("> **Importante:** siga as etapas apresentadas na guia **Portal da Transpar√™ncia de Cascavel** para fazer o download do arquivo correto.")
uploaded_file = st.file_uploader("")
if uploaded_file is not None:
    # Recebendo arquivo.csv:
    dataframe = pd.read_csv(uploaded_file, sep=';', encoding='latin1')
    Obras_CAC = dataframe
    st.markdown("Base de dados carregada com sucesso!")
    ################################### TRATAMENTO DO DATAFRAME

    # Convertendo a coluna 'Data de In√≠cio' para datetime
    Obras_CAC[['Data de Cadastro', 'Data de In√≠cio', 'Previs√£o Conclus√£o']] = Obras_CAC[['Data de Cadastro', 'Data de In√≠cio', 'Previs√£o Conclus√£o']].apply(pd.to_datetime, dayfirst=True)

    #Criando uma nova coluna com o ano
    Obras_CAC['Ano'] = Obras_CAC['Data de In√≠cio'].dt.year

    st.divider()

    ################################### APRESENTANDO O DATAFRAME
    years_sorted = Obras_CAC["Ano"].unique()
    years_sorted= pd.DataFrame(years_sorted)
    years_sorted = years_sorted.sort_values(by=0, ascending=False)
    
    anos = st.multiselect("Escolha o ano:", years_sorted)
    situacao = st.multiselect("Escolha a situa√ß√£o da obra:", Obras_CAC["Situa√ß√£o"].unique())
    menor_p = Obras_CAC['Percentual Conclus√£o (%)'].min()
    maior_p = Obras_CAC['Percentual Conclus√£o (%)'].max()
    percent = st.slider("Percentual de conclus√£o (%):", menor_p, maior_p, (menor_p, maior_p))

   #Utilizando st.empty(), preenche o espa√ßo com o widget quando necess√°rio.
    placeholder = st.empty()
    
    if anos:
        placeholder.empty()
        select = Obras_CAC[Obras_CAC['Ano'].isin(anos)]
        placeholder.data_editor(select)
        
    if situacao:
        placeholder.empty()
        sit = Obras_CAC[Obras_CAC['Situa√ß√£o'].isin(situacao)]
        placeholder.data_editor(sit)
    
    if percent:
        placeholder.empty()
        pct = Obras_CAC[(Obras_CAC['Percentual Conclus√£o (%)']>= percent[0]) & (Obras_CAC['Percentual Conclus√£o (%)']<=percent[1])]
        placeholder.data_editor(pct)
    
    if anos and situacao:
        placeholder.empty()
        and_sit = select[select['Situa√ß√£o'].isin(situacao)]
        placeholder.data_editor(and_sit, key='and_sit')
    
    if anos and percent:
        placeholder.empty()
        and_pct = select[(select['Percentual Conclus√£o (%)']>= percent[0]) & (select['Percentual Conclus√£o (%)']<=percent[1])]
        placeholder.data_editor(and_pct, key='and_pct')
    
    if situacao and percent:
        placeholder.empty()
        sit_pct = sit[(sit['Percentual Conclus√£o (%)']>= percent[0]) & (sit['Percentual Conclus√£o (%)']<=percent[1])]
        placeholder.data_editor(sit_pct, key='sit_pct')
        
    if anos and situacao and percent:
        placeholder.empty()
        sit_and_pct = and_sit[(and_sit['Percentual Conclus√£o (%)']>= percent[0]) & (and_sit['Percentual Conclus√£o (%)']<=percent[1])]
        placeholder.data_editor(sit_and_pct, key='sit_and_pct')

    ################################### Adicionando o gr√°fico de distribui√ß√£o das obras por ‚Äòdata de inicio‚Äô
    
    st.divider()
    st.markdown("##### Gr√°fico de distribui√ß√£o das obras por ‚Äòdata de inicio‚Äô:")
    st.markdown("Utilizando a base de dados enviada e a biblioteca Seaborn, foi poss√≠vel criar um gr√°fico para visualizar a distribui√ß√£o de dados relacionados √† ""Data de In√≠cio"" do conjunto total de obras.")
    sns.displot(Obras_CAC['Data de In√≠cio'], bins= 40, kde=True).set(title='Obras por Data de In√≠cio')
    st.pyplot(plt)
    st.markdown("**O que o gr√°fico mostra:**")
    st.markdown("**Distribui√ß√£o das datas de in√≠cio:** O gr√°fico exibe a frequ√™ncia com que as obras foram iniciadas em diferentes per√≠odos.")
    st.markdown("**Histograma:** As barras representam o n√∫mero de obras que iniciaram em cada intervalo de datas.")
    st.markdown("**Curva KDE:** A linha suave sobre o histograma mostra a densidade dos dados, ajudando a identificar picos e tend√™ncias na distribui√ß√£o.")
    
    ################################### 
    #from collections import Counter
    #import re

    # Fun√ß√£o para pr√©-processar o texto
    def preprocessar_texto(texto):
        texto = texto.lower()
        texto = re.sub(r'[^\w\s]', '', texto)
        palavras = texto.split()
        return palavras


    # Aplicar o pr√©-processamento em toda a coluna
    OBRS_Desc = pd.DataFrame()
    OBRS_Desc['Descri√ß√£o']= Obras_CAC['Descri√ß√£o'].apply(preprocessar_texto)

    # Contar a frequ√™ncia das palavras
    todas_as_palavras = [palavra for lista in OBRS_Desc['Descri√ß√£o'] for palavra in lista if len(palavra) >= 4]
    contagem_palavras = Counter(todas_as_palavras)

    #Criar um dataframe para receber as palavras-chave
    OBRAS_KeyWords = pd.DataFrame(columns=['Palavra', 'Contagem'])

    # Obter as palavras mais comuns - resultado geral
    i=0
    palavras_mais_frequentes = contagem_palavras.most_common()
    for palavra, contagem in palavras_mais_frequentes:
        if contagem >= 5:
            OBRAS_KeyWords.at[i, 'Palavra'] = palavra
            OBRAS_KeyWords.at[i, 'Contagem'] = contagem
            i += 1

    st.divider()
    tab4, tab5 = st.tabs(["Nuvem de palavras", "Base de dados"])
    
    with tab4:
        st.markdown("#### Nuvem de Palavras-Chave: Descri√ß√µes das Obras P√∫blicas")
        word_freq = dict(zip(OBRAS_KeyWords['Palavra'], OBRAS_KeyWords['Contagem']))
        #word_freq
        word_freq.pop('lote') #126
        word_freq.pop('municipal') #108
        word_freq.pop('p√∫blica') #64
        word_freq.pop('92021') #22
        word_freq.pop('72019') #15
        word_freq.pop('12020') # 13
        word_freq.pop('102020') # 12
        
        python_mask = np.array(Image.open('./base/CAC_logo.png')) 
        #para arquivos locais mudar o final do trecho de c√≥digo acima
        wordcloud = WordCloud(width=900, height=400, background_color='white', colormap='Set2', mask= python_mask, contour_color="gray", contour_width=1, min_font_size=3).generate_from_frequencies(word_freq)
        plt.figure(figsize=(10, 7))
        plt.imshow(wordcloud, interpolation='bilinear')
        plt.max_font_size = 150
        plt.axis('off')
        plt.show()
        st.pyplot(plt)
        st.markdown("A imagem acima representa uma visualiza√ß√£o das palavras mais frequentes encontradas nas descri√ß√µes das obras p√∫blicas. Ap√≥s um processo de limpeza e contagem, as palavras mais comuns, como ""lote"", ""municipal"" e ""p√∫blica"", foram removidas para destacar os termos mais relevantes e espec√≠ficos. Essa nuvem de palavras oferece uma vis√£o geral dos temas e caracter√≠sticas mais comuns presentes nas obras analisadas.")

    with tab5:
        st.data_editor(OBRAS_KeyWords)

st.divider()